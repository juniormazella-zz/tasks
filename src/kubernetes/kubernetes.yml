apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
spec:
  type: ClusterIP
  selector:
    app: elasticsearch
  ports:
    - name: http-port
      port: 9200
      targetPort: 9200
      protocol: TCP
    - name: node-port
      port: 9300
      targetPort: 9300
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch-node-port
spec:
  type: NodePort
  selector:
    app: elasticsearch
  ports:
    - name: http
      port: 9200
      targetPort: 9200
      nodePort: 30200
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
          imagePullPolicy: Always
          ports:
            - name: http-port
              containerPort: 9200
            - name: node-port
              containerPort: 9300
          env:
            - name: "discovery.type"
              value: "single-node"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
  name: kibana
spec:
  type: ClusterIP
  selector:
    app: kibana
  ports:
    - name: http-port
      port: 5601
      targetPort: 5601
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
  name: kibana-node-port
spec:
  type: NodePort
  selector:
    app: kibana
  ports:
    - name: http
      port: 5601
      targetPort: 5601
      nodePort: 30601
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:6.4.3
          ports:
            - name: "http-port"
              containerPort: 5601
          env:
            - name: "ELASTICSEARCH_URL"
              value: "http://elasticsearch:9200"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: "amqp-port"
      port: 5672
      targetPort: 5672
      protocol: TCP
    - name: "http-port"
      port: 15672
      targetPort: 15672
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq-node-port
spec:
  type: NodePort
  selector:
    app: rabbitmq
  ports:
    - name: "http-port"
      port: 15672
      targetPort: 15672
      nodePort: 30567
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.7-management
          ports:
            - name: "amqp-port"
              containerPort: 5672
            - name: "http-port"
              containerPort: 15672
          env:
            - name: "RABBITMQ_DEFAULT_USER"
              value: "admin"
            - name: "RABBITMQ_DEFAULT_PASS"
              value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: logstash
  name: logstash
spec:
  type: ClusterIP
  selector:
    app: logstash
  ports:
    - name: "port-5000"
      port: 5000
      targetPort: 5000
      protocol: TCP
    - name: "port-9600"
      port: 9600
      targetPort: 9600
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  labels:
    app: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: itau_logstash:latest
          imagePullPolicy: Never
          ports:
            - name: "port-5000"
              containerPort: 5000
            - name: "port-9600"
              containerPort: 9600
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - name: "postgres-port"
      port: 5432
      targetPort: 5432
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12
          ports:
            - name: "port-5432"
              containerPort: 5432
          env:
            - name: "POSTGRES_DB"
              value: "tasks"
            - name: "POSTGRES_USER"
              value: "postgres"
            - name: "POSTGRES_PASSWORD"
              value: "postgres"
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin4
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5050
      targetPort: 5050
  selector:
    app: pgadmin4
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin4-node-port
  labels:
    app: postgres
spec:
  type: NodePort
  ports:
    - name: http
      port: 5050
      targetPort: 5050
      nodePort: 30050
  selector:
    app: pgadmin4
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
  labels:
    app: pgadmin4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin4
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      containers:
        - name: pgadmin4
          image: fenglc/pgadmin4
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: pgadmin
              containerPort: 5050
          env:
            - name: "DEFAULT_USER"
              value: "admin"
            - name: "DEFAULT_PASSWORD"
              value: "admin"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tasks
  name: tasks
spec:
  type: ClusterIP
  selector:
    app: tasks
  ports:
    - name: "http-port"
      port: 8080
      targetPort: 8080
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: tasks-node-port
  labels:
    app: tasks
spec:
  type: NodePort
  ports:
    - name: "http-port"
      port: 8080
      targetPort: 8080
      nodePort: 30080
  selector:
    app: tasks
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tasks
  labels:
    app: tasks
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tasks
  template:
    metadata:
      labels:
        app: tasks
    spec:
      containers:
        - name: tasks
          image: tasks:latest
          imagePullPolicy: Never
          ports:
            - name: "http-port"
              containerPort: 8080
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: tasks
  labels:
    app: tasks
    release: monitoring
spec:
  selector:
    matchLabels:
      app: tasks
    namespaceSelector:
      any: true
  endpoints:
    - port: http-port
      path: /actuator/prometheus
      interval: 5s