apiVersion: v1
kind: LimitRange
metadata:
  name: mem-limit-range
spec:
  limits:
    - default:
        memory: 350Mi
      defaultRequest:
        memory: 150Mi
      type: Container
---
apiVersion: v1
kind: Secret
metadata:
  name: secret
type: Opaque
data:
  username: YWRtaW4=
  password: YWRtaW4=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.7-management
          imagePullPolicy: IfNotPresent
          ports:
            - name: amqp
              containerPort: 5672
            - name: http
              containerPort: 15672
          env:
            - name: "RABBITMQ_DEFAULT_USER"
              valueFrom:
                secretKeyRef:
                  name: "secret"
                  key: "username"
            - name: "RABBITMQ_DEFAULT_PASS"
              valueFrom:
                secretKeyRef:
                  name: "secret"
                  key: "password"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq
spec:
  type: ClusterIP
  selector:
    app: rabbitmq
  ports:
    - name: amqp
      port: 5672
      targetPort: 5672
      protocol: TCP
    - name: http
      port: 15672
      targetPort: 15672
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: rabbitmq
  name: rabbitmq-nodeport
spec:
  type: NodePort
  selector:
    app: rabbitmq
  ports:
    - name: service
      port: 15672
      targetPort: 15672
      nodePort: 30567
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  labels:
    app: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:6.4.3
          resources:
            limits:
              memory: "2048Mi"
            requests:
              memory: "1024Mi"
          ports:
            - name: "rest"
              containerPort: 9200
            - name: "node"
              containerPort: 9300
          env:
            - name: "discovery.type"
              value: "single-node"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: elasticsearch
  name: elasticsearch
spec:
  type: ClusterIP
  selector:
    app: elasticsearch
  ports:
    - name: "rest"
      port: 9200
      targetPort: 9200
      protocol: TCP
    - name: "node"
      port: 9300
      targetPort: 9300
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
  labels:
    app: logstash
spec:
  replicas: 1
  selector:
    matchLabels:
      app: logstash
  template:
    metadata:
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: itau_logstash:latest
          imagePullPolicy: Never
          ports:
            - name: "port-5000"
              containerPort: 5000
            - name: "port-9600"
              containerPort: 9600
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: logstash
  name: logstash-service
spec:
  type: ClusterIP
  selector:
    app: logstash
  ports:
    - name: "port-5000"
      port: 5000
      targetPort: 5000
      protocol: TCP
    - name: "port-9600"
      port: 9600
      targetPort: 9600
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
        - name: kibana
          image: docker.elastic.co/kibana/kibana:6.4.3
          ports:
            - name: "port-5601"
              containerPort: 5601
          env:
            - name: ELASTICSEARCH_URL
              value: http://elasticsearch:9200
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
  name: kibana
spec:
  type: ClusterIP
  selector:
    app: kibana
  ports:
    - name: "port-5601"
      port: 5601
      targetPort: 5601
      protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: kibana
  name: kibana-nodeport
spec:
  type: NodePort
  selector:
    app: kibana
  ports:
    - name: service
      port: 5601
      targetPort: 5601
      nodePort: 30601
      protocol: TCP
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
type: Opaque
data:
  username: cG9zdGdyZXM=
  password: cG9zdGdyZXM=
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:12
          ports:
            - name: "port-5432"
              containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: tasks
            - name: POSTGRES_USER
              value: postgres
            - name: POSTGRES_PASSWORD
              value: postgres
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: postgres
  name: postgres
spec:
  type: ClusterIP
  selector:
    app: postgres
  ports:
    - name: "port-5432"
      port: 5432
      targetPort: 5432
      protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgadmin4
  labels:
    app: pgadmin4
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin4
  template:
    metadata:
      labels:
        app: pgadmin4
    spec:
      containers:
        - name: pgadmin4
          image: fenglc/pgadmin4
          ports:
            - name: pgadmin
              containerPort: 5050
          env:
            - name: "DEFAULT_USER"
              valueFrom:
                secretKeyRef:
                  name: "secret"
                  key: "username"
            - name: "DEFAULT_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: "secret"
                  key: "password"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 5050
      targetPort: 5050
  selector:
    app: pgadmin4
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pgadmin4
  name: pgadmin4-nodeport
spec:
  type: NodePort
  selector:
    app: pgadmin4
  ports:
    - name: service
      port: 5050
      targetPort: 5050
      nodePort: 30050
      protocol: TCP